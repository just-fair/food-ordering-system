/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import java.sql.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.*;

public class pnlMenu extends javax.swing.JPanel {
    
    protected ConnectDB connection;
    protected String foodPic="";
    protected DefaultTableModel table;
    
    
    public pnlMenu(ConnectDB connection) {
        initComponents();
        
        this.connection=connection;
        this.setSize(715, 765);
        
        //design sa table header wala kasi sa design tab
        this.tblMenu.getTableHeader().setFont(new Font("Sogoe UI", Font.BOLD, 16));  
        this.tblMenu.getTableHeader().setBackground(new Color(0xEADBC8));
        this.tblMenu.getTableHeader().setBorder(BorderFactory.createEmptyBorder());
        
        
        this.table = (DefaultTableModel) tblMenu.getModel();
        this.btnEdit.setEnabled(false);
        this.btnDelete.setEnabled(false);
        this.txtFoodPic.setText("");
        this.btnSave.setEnabled(false);
        
        this.tblMenu.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        this.tblMenu.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
           
            public void valueChanged(ListSelectionEvent e) {
                //pag may nakaselect na row disable si add button
                if(tblMenu.getSelectedRow()!=-1){
                   btnAdd.setEnabled(false);
                   btnEdit.setEnabled(true);
                   btnDelete.setEnabled(true);
                   txtFoodName.setEnabled(false);
                   txtFoodPrice.setEnabled(false);
                   btnAddImage.setEnabled(false);
                }else btnAdd.setEnabled(true);
                
                
                // Check kung marami nakaselect na row
                if (tblMenu.getSelectedRowCount() > 1) {
                   //nililimit sa isa lang yung pagselect ng rows
                    int[] selectedRows = tblMenu.getSelectedRows();
                    tblMenu.getSelectionModel().setSelectionInterval(selectedRows[0], selectedRows[0]);
                }
            }
        });
        
        displayMenuTbl();
        
        this.setSize(714, 609);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFoodName = new javax.swing.JTextField();
        txtFoodPrice = new javax.swing.JTextField();
        btnAddImage = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtFoodID = new javax.swing.JLabel();
        txtFoodPic = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 250, 246));
        setPreferredSize(new java.awt.Dimension(715, 765));

        jScrollPane1.setBackground(new java.awt.Color(254, 250, 246));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 250, 246)));
        jScrollPane1.setViewportBorder(null);

        tblMenu.setAutoCreateRowSorter(true);
        tblMenu.setBackground(new java.awt.Color(254, 250, 246));
        tblMenu.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Food ID", "Food Name", "Price", "Food Pic"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMenu.setFillsViewportHeight(true);
        tblMenu.setGridColor(new java.awt.Color(254, 250, 246));
        tblMenu.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tblMenu.setRowHeight(25);
        tblMenu.setSelectionBackground(new java.awt.Color(16, 44, 87));
        tblMenu.setSelectionForeground(new java.awt.Color(254, 250, 246));
        tblMenu.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblMenu);
        if (tblMenu.getColumnModel().getColumnCount() > 0) {
            tblMenu.getColumnModel().getColumn(0).setPreferredWidth(3);
            tblMenu.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {
                {
                    setHorizontalAlignment(SwingConstants.CENTER);
                }
            });
            tblMenu.getColumnModel().getColumn(2).setPreferredWidth(10);
            tblMenu.getColumnModel().getColumn(2).setCellRenderer(new DefaultTableCellRenderer() {
                {
                    setHorizontalAlignment(SwingConstants.CENTER);
                }
            });
        }

        btnAdd.setBackground(new java.awt.Color(218, 192, 163));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(16, 44, 87), 2, true));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(218, 192, 163));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(16, 44, 87), 2, true));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(218, 192, 163));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(16, 44, 87), 2, true));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Food ID:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Food Name:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Food Price:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Food Pic:");

        txtFoodName.setBackground(new java.awt.Color(234, 219, 200));
        txtFoodName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtFoodName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(16, 44, 87), 2));

        txtFoodPrice.setBackground(new java.awt.Color(234, 219, 200));
        txtFoodPrice.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtFoodPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(16, 44, 87), 2));

        btnAddImage.setBackground(new java.awt.Color(254, 250, 246));
        btnAddImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-camera-50.png"))); // NOI18N
        btnAddImage.setText("Add Image");
        btnAddImage.setBorder(null);
        btnAddImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddImage.setIconTextGap(5);
        btnAddImage.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImageActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(218, 192, 163));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(16, 44, 87), 2, true));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(218, 192, 163));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(16, 44, 87), 2, true));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 255, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        txtFoodID.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtFoodID.setText("Auto generated");

        txtFoodPic.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFoodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFoodName, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addComponent(btnAddImage, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFoodID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFoodPic, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnEdit});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtFoodID))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtFoodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtFoodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAddImage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtFoodPic))))
                .addContainerGap(226, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnDelete, btnEdit});

    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
       
        String foodName=this.txtFoodName.getText();
        int foodID=Integer.parseInt((String)table.getValueAt(table.getRowCount()-1, 0))+1; //foodID base sa dulo ng table
        
        if(foodName.length()==0 || this.txtFoodPrice.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Please fill up all requirements");
            return;
        }
        
        
        int foodPrice = Integer.parseInt(this.txtFoodPrice.getText());
        
 
        
        if(this.foodPic.length()==0){
            JOptionPane.showMessageDialog(this, "Please add an Image");
            return;
        }
        
        try{
            //kunin lahat ng foodId sa archive ng menu
            ResultSet results  = connection.getResult("SELECT FOOD_ID FROM ARCMENU ORDER BY FOOD_ID"); 
            
            if(results!=null){ //pag may laman yung table
                while (results.next()){
                    if(results.getInt("food_ID")==foodID) foodID+=1; //pag may same id sa table increment
                }
            }

            
            results.close();
            
            
            String command="INSERT INTO MENU (food_id, food_name, food_price, food_pic) VALUES(?,?,?,?)";
            PreparedStatement ps = connection.con.prepareStatement(command);
            ps.setInt(1, foodID);
            ps.setString(2, foodName);
            ps.setInt(3, foodPrice);
            ps.setString(4, foodPic);
            
            ps.executeUpdate();
            ps.close();
            
            this.displayMenuTbl();
            this.revalidate();
            this.repaint();
            
            this.txtFoodName.setText("");
            this.txtFoodPrice.setText("");
            this.txtFoodPic.setText("");
            this.btnAddImage.setEnabled(true);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        tblMenu.clearSelection();
        this.btnEdit.setEnabled(false);
        this.btnDelete.setEnabled(false);
        this.btnSave.setEnabled(false);
        this.txtFoodName.setText("");
        this.txtFoodID.setText("Auto generated");
        this.txtFoodPrice.setText("");
        this.txtFoodPic.setText("");
        this.txtFoodName.setEnabled(true);
        this.txtFoodPrice.setEnabled(true);
        this.btnAddImage.setEnabled(true);
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImageActionPerformed
        
        
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("jpg", "jpeg", "png");
        fileChooser.setFileFilter(filter);
        
        int result = fileChooser.showOpenDialog(null);
        
        //0 if may inopen na file
        if(result==0){
            File imageFile = fileChooser.getSelectedFile();
            String directory="src/Images/";
            
            try{
                Path destinationPath = new File(directory, imageFile.getName()).toPath(); //path ng copy
                Files.copy(imageFile.toPath(), destinationPath, StandardCopyOption.REPLACE_EXISTING);//path ng original, tas kung san ilalagay
                
                
                
            }catch(Exception e){
                System.out.println(e.getMessage());
                e.printStackTrace();
            }
            
            fileChooser.setVisible(false);
            this.btnAddImage.setEnabled(false);
            // lagay yung filename sa global variable
            this.foodPic = imageFile.getName();
            this.txtFoodPic.setText(imageFile.getName());
        }
        
            
    }//GEN-LAST:event_btnAddImageActionPerformed

    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
       this.btnEdit.setEnabled(false);
       this.btnDelete.setEnabled(false);
       this.btnSave.setEnabled(true);
       this.btnAddImage.setEnabled(true);
        
        
       int selectedRow = tblMenu.getSelectedRow();
       
       if(selectedRow!=-1){
           String fID=""+tblMenu.getValueAt(selectedRow, 0);
           String fName=""+tblMenu.getValueAt(selectedRow, 1);
           String fPrice=""+ tblMenu.getValueAt(selectedRow, 2);
           String fPic=""+tblMenu.getValueAt(selectedRow, 3);
           
           this.txtFoodID.setText(""+fID);
           this.txtFoodName.setText(fName);
           this.txtFoodPrice.setText(""+fPrice);
           this.txtFoodPic.setText(fPic);
           
           this.txtFoodName.setEnabled(true);
           this.txtFoodPrice.setEnabled(true);        
       }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        this.btnSave.setEnabled(false);
        
        int fID=Integer.parseInt(txtFoodID.getText());
        String fName=txtFoodName.getText();
        int fPrice=Integer.parseInt(txtFoodPrice.getText());
        String fPic=txtFoodPic.getText();
        

        try{
        String command="UPDATE MENU SET food_name=?, food_price=?, food_pic=? WHERE food_id=?";
        PreparedStatement ps= connection.con.prepareStatement(command);
        
        ps.setString(1, fName);
        ps.setInt(2, fPrice);
        ps.setString(3, fPic);
        ps.setInt(4, fID);
        
        ps.executeUpdate();
        ps.close();
        
        this.displayMenuTbl();
        
        }catch(Exception e){
            System.out.println();
        }
        
        this.txtFoodID.setText("");
        this.txtFoodName.setText("");
        this.txtFoodPrice.setText("");
        this.txtFoodPic.setText("");
        
        JOptionPane.showMessageDialog(null, "Updated Successfully");
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       
      
        int response = JOptionPane.showConfirmDialog(this,"Are you sure delete this item?",
                        "Confirmation",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE );
        switch(response){
            case 0:
                int selectedRow = tblMenu.getSelectedRow();
       
                if(selectedRow!=-1){
                    String fID=""+tblMenu.getValueAt(selectedRow, 0);
                    String fName=""+tblMenu.getValueAt(selectedRow, 1);
                    String fPrice=""+tblMenu.getValueAt(selectedRow, 2);
                    String fPic=""+tblMenu.getValueAt(selectedRow, 3);
                    
                    try{
                        //lagay sa archive bago delete
                        String command="INSERT INTO ARCMENU (food_id, food_name, food_price, food_pic) VALUES(?,?,?,?)";
                        PreparedStatement ps = connection.con.prepareStatement(command);
                        ps.setInt(1, Integer.parseInt(fID));
                        ps.setString(2, fName);
                        ps.setInt(3, Integer.parseInt(fPrice));
                        ps.setString(4, fPic);

                        ps.executeUpdate();
                        
                        
                        
                        //delete sa menu table
                        ps = connection.con.prepareStatement("DELETE FROM MENU WHERE food_id=?");
                        ps.setInt(1, Integer.parseInt(fID));
                        ps.executeUpdate();
                        ps.close();
                        
                        JOptionPane.showMessageDialog(this, "Item Successfully Deleted");
                        
                        this.displayMenuTbl(); 
                        this.btnEdit.setEnabled(false);
                        this.btnDelete.setEnabled(false);
                        this.btnAddImage.setEnabled(false);
                        this.txtFoodName.setEnabled(true);
                        this.txtFoodPrice.setEnabled(true);
                        this.btnAddImage.setEnabled(true);
                        
                        
                    }catch(Exception e){      
                        System.out.println(e.getMessage());
                    }
                }
                
                
                break;
                
            case 1:
                
                break;
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    
    public void displayMenuTbl(){
        //tanggalin laman ng table
        if(table.getRowCount()>0){
            for(int i =table.getRowCount()-1; i>=0; i--){
                table.removeRow(i);
            }
        }
        
        
        String command="SELECT * FROM MENU ORDER BY FOOD_ID";
        ResultSet results=connection.getResult(command);
        
        
        try{
            while(results.next()){
                String fID = results.getString("food_id");
                String fName = results.getString("food_name");
                String fPrice= results.getString("food_price");
                String fPic = results.getString("food_pic");
                
                String newRow[]={fID, fName, fPrice, fPic};
                
                table.addRow(newRow);
                
            }
            results.close();
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddImage;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMenu;
    private javax.swing.JLabel txtFoodID;
    private javax.swing.JTextField txtFoodName;
    private javax.swing.JLabel txtFoodPic;
    private javax.swing.JTextField txtFoodPrice;
    // End of variables declaration//GEN-END:variables
    

}
