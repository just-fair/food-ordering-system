
import java.awt.Color;
import java.awt.Font;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Administrator
 */
public class PnlArcInvoice extends javax.swing.JPanel {

    protected ConnectDB connection = null;
    protected DefaultTableModel tblModel;
    
    
    public PnlArcInvoice(ConnectDB connection) {
        initComponents();
        this.setSize(710, 470);
        
        this.connection=connection;
        this.tblModel = (DefaultTableModel) tblArcInvoice.getModel();
        
        //design sa table header wala kasi sa design tab
        this.tblArcInvoice.getTableHeader().setFont(new Font("Sogoe UI", Font.BOLD, 16));  
        this.tblArcInvoice.getTableHeader().setBackground(new Color(0xEADBC8));
        this.tblArcInvoice.getTableHeader().setBorder(BorderFactory.createEmptyBorder());
        
        
        this.tblArcInvoice.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        this.tblArcInvoice.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
           
            public void valueChanged(ListSelectionEvent e) {
                
                
                
                // Check kung marami nakaselect na row
                if (tblArcInvoice.getSelectedRowCount() > 1) {
                   //nililimit sa isa lang yung pagselect ng rows
                    int[] selectedRows = tblArcInvoice.getSelectedRows();
                    tblArcInvoice.getSelectionModel().setSelectionInterval(selectedRows[0], selectedRows[0]);
                }
            }
        });
        
        this.displayArcInvoiceTbl();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblArcInvoice = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(254, 250, 246));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("INVOICE");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 250, 246)));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 250, 246)));

        tblArcInvoice.setAutoCreateRowSorter(true);
        tblArcInvoice.setBackground(new java.awt.Color(254, 250, 246));
        tblArcInvoice.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        tblArcInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Invoice ID", "Date", "Cashier", "Total", "Time", "Order ID", "Change", "Cash"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblArcInvoice.setFillsViewportHeight(true);
        tblArcInvoice.setGridColor(new java.awt.Color(254, 250, 246));
        tblArcInvoice.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tblArcInvoice.setRowHeight(25);
        tblArcInvoice.setSelectionBackground(new java.awt.Color(16, 44, 87));
        tblArcInvoice.setSelectionForeground(new java.awt.Color(254, 250, 246));
        tblArcInvoice.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblArcInvoice);
        if (tblArcInvoice.getColumnModel().getColumnCount() > 0) {
            tblArcInvoice.getColumnModel().getColumn(0).setResizable(false);
            tblArcInvoice.getColumnModel().getColumn(0).setPreferredWidth(8);
            tblArcInvoice.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {
                {
                    setHorizontalAlignment(SwingConstants.CENTER);
                }
            });
            tblArcInvoice.getColumnModel().getColumn(1).setResizable(false);
            tblArcInvoice.getColumnModel().getColumn(1).setPreferredWidth(25);
            tblArcInvoice.getColumnModel().getColumn(2).setResizable(false);
            tblArcInvoice.getColumnModel().getColumn(3).setResizable(false);
            tblArcInvoice.getColumnModel().getColumn(3).setPreferredWidth(8);
            tblArcInvoice.getColumnModel().getColumn(3).setCellRenderer(new DefaultTableCellRenderer() {
                {
                    setHorizontalAlignment(SwingConstants.CENTER);
                }
            });
            tblArcInvoice.getColumnModel().getColumn(4).setResizable(false);
            tblArcInvoice.getColumnModel().getColumn(4).setPreferredWidth(25);
            tblArcInvoice.getColumnModel().getColumn(5).setResizable(false);
            tblArcInvoice.getColumnModel().getColumn(5).setPreferredWidth(7);
            tblArcInvoice.getColumnModel().getColumn(5).setCellRenderer(new DefaultTableCellRenderer() {
                {
                    setHorizontalAlignment(SwingConstants.CENTER);
                }
            });
            tblArcInvoice.getColumnModel().getColumn(6).setResizable(false);
            tblArcInvoice.getColumnModel().getColumn(6).setPreferredWidth(8);
            tblArcInvoice.getColumnModel().getColumn(6).setCellRenderer(new DefaultTableCellRenderer() {
                {
                    setHorizontalAlignment(SwingConstants.CENTER);
                }
            });
            tblArcInvoice.getColumnModel().getColumn(7).setResizable(false);
            tblArcInvoice.getColumnModel().getColumn(7).setPreferredWidth(8);
            tblArcInvoice.getColumnModel().getColumn(7).setCellRenderer(new DefaultTableCellRenderer() {
                {
                    setHorizontalAlignment(SwingConstants.CENTER);
                }
            });
        }

        jButton1.setBackground(new java.awt.Color(218, 192, 163));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-refresh-document-from-company-digital-file-system-48.png"))); // NOI18N
        jButton1.setText("Retrieve");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(16, 44, 87), 2, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(272, 272, 272))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int selectedRow = tblArcInvoice.getSelectedRow();
                
                if(selectedRow==-1){
                    JOptionPane.showMessageDialog(this, "Please select a row");
                    return;
                }
        
        int response = JOptionPane.showConfirmDialog(this,"Are you sure want to retrieve this item?",
                        "Confirmation",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE );
        switch(response){
            case 0:
                
                
                    String invcID=""+tblArcInvoice.getValueAt(selectedRow, 0);
                    String date=""+tblArcInvoice.getValueAt(selectedRow, 1);
                    String cashier=""+tblArcInvoice.getValueAt(selectedRow, 2);
                    String total=""+tblArcInvoice.getValueAt(selectedRow, 3);
                    String time=""+tblArcInvoice.getValueAt(selectedRow, 4);
                    String order_id=""+tblArcInvoice.getValueAt(selectedRow, 5);
                    String change=""+tblArcInvoice.getValueAt(selectedRow, 6);
                    String cash=""+tblArcInvoice.getValueAt(selectedRow, 7);
                    
                    try{
                        //lagay sa menu table then alisin sa archive
                        String command="INSERT INTO INVOICE (invc_id, date, cashier, total,"
                                + " time, order_id, change, cash) VALUES(?,?,?,?,?,?,?,?)";
                        
                        PreparedStatement ps = connection.con.prepareStatement(command);
                        ps.setInt(1, Integer.parseInt(invcID));
                        ps.setString(2, date);
                        ps.setString(3, cashier);
                        ps.setInt(4, Integer.parseInt(total));
                        ps.setString (5, time);
                        ps.setInt(6, Integer.parseInt(order_id));
                        ps.setInt(7, Integer.parseInt(change));
                        ps.setInt(8, Integer.parseInt(cash));

                        ps.executeUpdate();
                        
                        
                        //delete sa archive
                        ps = connection.con.prepareStatement("DELETE FROM ARCINVOICE WHERE invc_id=?");
                        ps.setInt(1, Integer.parseInt(invcID));
                        ps.executeUpdate();
                        
                        JOptionPane.showMessageDialog(this, "Item Successfully Retrieve");
                        
                        displayArcInvoiceTbl(); 
                        
                        ps.close();
                        
                    }catch(Exception e){      
                        System.out.println(e.getMessage());
                    }
                
                
                
                break;
                
            case 1:
                
                break;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void displayArcInvoiceTbl(){
        if(tblModel.getRowCount()>0){
            for(int i =tblModel.getRowCount()-1; i>=0; i--){
                tblModel.removeRow(i);
            }
        }
        
        
        String command="SELECT * FROM ARCINVOICE ORDER BY INVC_ID";
        ResultSet results=connection.getResult(command);
        
        
        try{
            while(results.next()){
                int invcID = results.getInt("invc_id");
                String date = results.getString("date");
                String cashier= results.getString("cashier");
                int total = results.getInt("total");
                String time = results.getString("time");
                int orderID = results.getInt("order_id");
                int change = results.getInt("change");
                int cash = results.getInt("cash");
                
                String newRow[]={""+invcID, date, cashier, ""+total, time, ""+orderID, ""+change, ""+cash};
                
                tblModel.addRow(newRow);
                
            }
            results.close();
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblArcInvoice;
    // End of variables declaration//GEN-END:variables
}
